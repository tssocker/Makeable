{
  "id": "project_1760551387771",
  "name": "App ich meine Fitness",
  "prompt": "Erstelle eine App wo ich meine Fitness mit tracken kann\n\nIteration: ich w√ºrde gerne ein weiteres Feature einf√ºgen wo ich meine Zeit stoppen kann f√ºrs laufen",
  "promptHistory": [
    {
      "prompt": "Erstelle eine App wo ich meine Fitness mit tracken kann",
      "timestamp": "2025-10-15T18:03:07.771Z"
    }
  ],
  "files": [
    {
      "path": "index.html",
      "content": "<!DOCTYPE html>\n<html lang=\"de\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Fitness Tracker</title>\n    <style>\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            min-height: 100vh;\n            padding: 20px;\n        }\n\n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n        }\n\n        .header {\n            text-align: center;\n            color: white;\n            margin-bottom: 30px;\n        }\n\n        .header h1 {\n            font-size: 2.5rem;\n            margin-bottom: 10px;\n            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);\n        }\n\n        .dashboard {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n            gap: 20px;\n            margin-bottom: 30px;\n        }\n\n        .card {\n            background: white;\n            border-radius: 15px;\n            padding: 25px;\n            box-shadow: 0 8px 25px rgba(0,0,0,0.15);\n            transition: transform 0.3s ease;\n        }\n\n        .card:hover {\n            transform: translateY(-5px);\n        }\n\n        .card h2 {\n            color: #333;\n            margin-bottom: 20px;\n            font-size: 1.5rem;\n            border-bottom: 3px solid #667eea;\n            padding-bottom: 10px;\n        }\n\n        .form-group {\n            margin-bottom: 15px;\n        }\n\n        .form-group label {\n            display: block;\n            margin-bottom: 5px;\n            font-weight: 600;\n            color: #555;\n        }\n\n        .form-group input,\n        .form-group select {\n            width: 100%;\n            padding: 12px;\n            border: 2px solid #e0e0e0;\n            border-radius: 8px;\n            font-size: 16px;\n            transition: border-color 0.3s ease;\n        }\n\n        .form-group input:focus,\n        .form-group select:focus {\n            outline: none;\n            border-color: #667eea;\n        }\n\n        .btn {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            color: white;\n            border: none;\n            padding: 12px 25px;\n            border-radius: 8px;\n            cursor: pointer;\n            font-size: 16px;\n            font-weight: 600;\n            transition: transform 0.2s ease;\n            width: 100%;\n        }\n\n        .btn:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);\n        }\n\n        .stats-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n            gap: 15px;\n            margin-bottom: 20px;\n        }\n\n        .stat-item {\n            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\n            color: white;\n            padding: 20px;\n            border-radius: 10px;\n            text-align: center;\n        }\n\n        .stat-value {\n            font-size: 2rem;\n            font-weight: bold;\n            margin-bottom: 5px;\n        }\n\n        .stat-label {\n            font-size: 0.9rem;\n            opacity: 0.9;\n        }\n\n        .workout-list {\n            max-height: 400px;\n            overflow-y: auto;\n        }\n\n        .workout-item {\n            background: #f8f9fa;\n            border-radius: 8px;\n            padding: 15px;\n            margin-bottom: 10px;\n            border-left: 4px solid #667eea;\n        }\n\n        .workout-item h4 {\n            color: #333;\n            margin-bottom: 5px;\n        }\n\n        .workout-item p {\n            color: #666;\n            margin: 2px 0;\n        }\n\n        .delete-btn {\n            background: #e74c3c;\n            color: white;\n            border: none;\n            padding: 5px 10px;\n            border-radius: 5px;\n            cursor: pointer;\n            float: right;\n            margin-top: 10px;\n        }\n\n        .delete-btn:hover {\n            background: #c0392b;\n        }\n\n        .progress-bar {\n            width: 100%;\n            height: 20px;\n            background: #e0e0e0;\n            border-radius: 10px;\n            overflow: hidden;\n            margin: 10px 0;\n        }\n\n        .progress-fill {\n            height: 100%;\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            transition: width 0.3s ease;\n        }\n\n        @media (max-width: 768px) {\n            .dashboard {\n                grid-template-columns: 1fr;\n            }\n            \n            .stats-grid {\n                grid-template-columns: repeat(2, 1fr);\n            }\n            \n            .header h1 {\n                font-size: 2rem;\n            }\n        }\n\n        .chart-container {\n            margin-top: 20px;\n            height: 300px;\n            position: relative;\n            background: #f8f9fa;\n            border-radius: 10px;\n            padding: 20px;\n            display: flex;\n            align-items: end;\n            justify-content: space-around;\n        }\n\n        .chart-bar {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n            width: 30px;\n            border-radius: 5px 5px 0 0;\n            position: relative;\n            transition: all 0.3s ease;\n        }\n\n        .chart-bar:hover {\n            transform: scale(1.1);\n        }\n\n        .chart-label {\n            position: absolute;\n            bottom: -25px;\n            left: 50%;\n            transform: translateX(-50%);\n            font-size: 0.8rem;\n            color: #666;\n        }\n\n        .chart-value {\n            position: absolute;\n            top: -25px;\n            left: 50%;\n            transform: translateX(-50%);\n            font-size: 0.8rem;\n            color: #333;\n            font-weight: bold;\n        }\n\n        /* Stopwatch Styles */\n        .stopwatch-display {\n            text-align: center;\n            margin-bottom: 20px;\n        }\n\n        .stopwatch-time {\n            font-size: 3rem;\n            font-weight: bold;\n            color: #333;\n            font-family: 'Courier New', monospace;\n            margin-bottom: 10px;\n        }\n\n        .stopwatch-controls {\n            display: flex;\n            gap: 10px;\n            margin-bottom: 20px;\n        }\n\n        .stopwatch-btn {\n            flex: 1;\n            padding: 15px;\n            border: none;\n            border-radius: 8px;\n            font-size: 16px;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.3s ease;\n        }\n\n        .start-btn {\n            background: linear-gradient(135deg, #27ae60 0%, #2ecc71 100%);\n            color: white;\n        }\n\n        .stop-btn {\n            background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);\n            color: white;\n        }\n\n        .reset-btn {\n            background: linear-gradient(135deg, #f39c12 0%, #e67e22 100%);\n            color: white;\n        }\n\n        .stopwatch-btn:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n        }\n\n        .stopwatch-btn:disabled {\n            opacity: 0.6;\n            cursor: not-allowed;\n            transform: none;\n        }\n\n        .stopwatch-info {\n            background: #f8f9fa;\n            padding: 15px;\n            border-radius: 8px;\n            margin-top: 15px;\n        }\n\n        .stopwatch-info p {\n            margin: 5px 0;\n            color: #666;\n        }\n\n        .transfer-btn {\n            background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);\n            color: white;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 8px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: 600;\n            margin-top: 10px;\n            width: 100%;\n        }\n\n        .transfer-btn:hover {\n            transform: translateY(-2px);\n            box-shadow: 0 5px 15px rgba(52, 152, 219, 0.4);\n        }\n\n        .transfer-btn:disabled {\n            opacity: 0.6;\n            cursor: not-allowed;\n            transform: none;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <h1>üèãÔ∏è‚Äç‚ôÇÔ∏è Mein Fitness Tracker</h1>\n            <p>Verfolge deine Fortschritte und erreiche deine Ziele!</p>\n        </div>\n\n        <div class=\"dashboard\">\n            <!-- Lauf-Stopwatch -->\n            <div class=\"card\">\n                <h2>‚è±Ô∏è Lauf-Stopwatch</h2>\n                <div class=\"stopwatch-display\">\n                    <div class=\"stopwatch-time\" id=\"stopwatchTime\">00:00:00</div>\n                    <div class=\"stopwatch-controls\">\n                        <button class=\"stopwatch-btn start-btn\" id=\"startBtn\" onclick=\"stopwatch.start()\">Start</button>\n                        <button class=\"stopwatch-btn stop-btn\" id=\"stopBtn\" onclick=\"stopwatch.stop()\" disabled>Stop</button>\n                        <button class=\"stopwatch-btn reset-btn\" id=\"resetBtn\" onclick=\"stopwatch.reset()\">Reset</button>\n                    </div>\n                    <button class=\"transfer-btn\" id=\"transferBtn\" onclick=\"stopwatch.transferToWorkout()\" disabled>\n                        Zeit ins Workout √ºbernehmen\n                    </button>\n                </div>\n                <div class=\"stopwatch-info\">\n                    <p><strong>Aktuelle Session:</strong> <span id=\"currentSession\">Nicht gestartet</span></p>\n                    <p><strong>Gesch√§tzte Kalorien:</strong> <span id=\"estimatedCalories\">0</span> kcal</p>\n                    <p><em>Tipp: Starte die Stoppuhr vor dem Lauf und √ºbernimm die Zeit automatisch ins Workout-Formular!</em></p>\n                </div>\n            </div>\n\n            <!-- Statistiken -->\n            <div class=\"card\">\n                <h2>üìä Deine Statistiken</h2>\n                <div class=\"stats-grid\">\n                    <div class=\"stat-item\">\n                        <div class=\"stat-value\" id=\"totalWorkouts\">0</div>\n                        <div class=\"stat-label\">Workouts</div>\n                    </div>\n                    <div class=\"stat-item\">\n                        <div class=\"stat-value\" id=\"totalCalories\">0</div>\n                        <div class=\"stat-label\">Kalorien</div>\n                    </div>\n                    <div class=\"stat-item\">\n                        <div class=\"stat-value\" id=\"totalDuration\">0</div>\n                        <div class=\"stat-label\">Minuten</div>\n                    </div>\n                    <div class=\"stat-item\">\n                        <div class=\"stat-value\" id=\"avgCalories\">0</div>\n                        <div class=\"stat-label\">‚åÄ Kalorien</div>\n                    </div>\n                </div>\n                \n                <!-- Wochenziel Progress -->\n                <h3>Wochenziel: 5 Workouts</h3>\n                <div class=\"progress-bar\">\n                    <div class=\"progress-fill\" id=\"weeklyProgress\" style=\"width: 0%\"></div>\n                </div>\n                <p id=\"progressText\">0 von 5 Workouts diese Woche</p>\n\n                <!-- Workout Verlauf Chart -->\n                <div class=\"chart-container\" id=\"workoutChart\">\n                    <div class=\"chart-bar\" style=\"height: 20px;\">\n                        <span class=\"chart-value\">0</span>\n                        <span class=\"chart-label\">Mo</span>\n                    </div>\n                    <div class=\"chart-bar\" style=\"height: 20px;\">\n                        <span class=\"chart-value\">0</span>\n                        <span class=\"chart-label\">Di</span>\n                    </div>\n                    <div class=\"chart-bar\" style=\"height: 20px;\">\n                        <span class=\"chart-value\">0</span>\n                        <span class=\"chart-label\">Mi</span>\n                    </div>\n                    <div class=\"chart-bar\" style=\"height: 20px;\">\n                        <span class=\"chart-value\">0</span>\n                        <span class=\"chart-label\">Do</span>\n                    </div>\n                    <div class=\"chart-bar\" style=\"height: 20px;\">\n                        <span class=\"chart-value\">0</span>\n                        <span class=\"chart-label\">Fr</span>\n                    </div>\n                    <div class=\"chart-bar\" style=\"height: 20px;\">\n                        <span class=\"chart-value\">0</span>\n                        <span class=\"chart-label\">Sa</span>\n                    </div>\n                    <div class=\"chart-bar\" style=\"height: 20px;\">\n                        <span class=\"chart-value\">0</span>\n                        <span class=\"chart-label\">So</span>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Workout hinzuf√ºgen -->\n            <div class=\"card\">\n                <h2>‚ûï Neues Workout</h2>\n                <form id=\"workoutForm\">\n                    <div class=\"form-group\">\n                        <label for=\"workoutType\">Aktivit√§t:</label>\n                        <select id=\"workoutType\" required>\n                            <option value=\"\">W√§hle eine Aktivit√§t</option>\n                            <option value=\"Laufen\">üèÉ‚Äç‚ôÇÔ∏è Laufen</option>\n                            <option value=\"Radfahren\">üö¥‚Äç‚ôÇÔ∏è Radfahren</option>\n                            <option value=\"Krafttraining\">üèãÔ∏è‚Äç‚ôÇÔ∏è Krafttraining</option>\n                            <option value=\"Schwimmen\">üèä‚Äç‚ôÇÔ∏è Schwimmen</option>\n                            <option value=\"Yoga\">üßò‚Äç‚ôÄÔ∏è Yoga</option>\n                            <option value=\"Tennis\">üéæ Tennis</option>\n                            <option value=\"Fu√üball\">‚öΩ Fu√üball</option>\n                            <option value=\"Basketball\">üèÄ Basketball</option>\n                            <option value=\"Wandern\">ü•æ Wandern</option>\n                            <option value=\"Tanzen\">üíÉ Tanzen</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"duration\">Dauer (Minuten):</label>\n                        <input type=\"number\" id=\"duration\" min=\"1\" max=\"600\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"calories\">Verbrannte Kalorien:</label>\n                        <input type=\"number\" id=\"calories\" min=\"1\" max=\"2000\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"intensity\">Intensit√§t:</label>\n                        <select id=\"intensity\" required>\n                            <option value=\"\">W√§hle Intensit√§t</option>\n                            <option value=\"Niedrig\">Niedrig</option>\n                            <option value=\"Mittel\">Mittel</option>\n                            <option value=\"Hoch\">Hoch</option>\n                            <option value=\"Sehr Hoch\">Sehr Hoch</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"notes\">Notizen (optional):</label>\n                        <input type=\"text\" id=\"notes\" placeholder=\"Wie war das Workout?\">\n                    </div>\n                    <button type=\"submit\" class=\"btn\">Workout speichern</button>\n                </form>\n            </div>\n\n            <!-- Workout Verlauf -->\n            <div class=\"card\">\n                <h2>üìù Workout Verlauf</h2>\n                <div class=\"workout-list\" id=\"workoutList\">\n                    <p style=\"text-align: center; color: #666;\">Noch keine Workouts gespeichert. F√ºge dein erstes Workout hinzu!</p>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        class FitnessTracker {\n            constructor() {\n                this.workouts = JSON.parse(localStorage.getItem('workouts')) || [];\n                this.init();\n            }\n\n            init() {\n                this.bindEvents();\n                this.updateStats();\n                this.renderWorkouts();\n                this.updateChart();\n            }\n\n            bindEvents() {\n                document.getElementById('workoutForm').addEventListener('submit', (e) => {\n                    e.preventDefault();\n                    this.addWorkout();\n                });\n            }\n\n            addWorkout() {\n                const form = document.getElementById('workoutForm');\n                const workout = {\n                    id: Date.now(),\n                    type: form.workoutType.value,\n                    duration: parseInt(form.duration.value),\n                    calories: parseInt(form.calories.value),\n                    intensity: form.intensity.value,\n                    notes: form.notes.value,\n                    date: new Date().toISOString()\n                };\n\n                this.workouts.unshift(workout);\n                this.saveWorkouts();\n                this.updateStats();\n                this.renderWorkouts();\n                this.updateChart();\n                form.reset();\n\n                // Success Animation\n                const btn = form.querySelector('.btn');\n                const originalText = btn.textContent;\n                btn.textContent = 'Gespeichert! ‚úÖ';\n                btn.style.background = '#27ae60';\n                setTimeout(() => {\n                    btn.textContent = originalText;\n                    btn.style.background = '';\n                }, 2000);\n            }\n\n            deleteWorkout(id) {\n                if (confirm('Workout wirklich l√∂schen?')) {\n                    this.workouts = this.workouts.filter(w => w.id !== id);\n                    this.saveWorkouts();\n                    this.updateStats();\n                    this.renderWorkouts();\n                    this.updateChart();\n                }\n            }\n\n            updateStats() {\n                const totalWorkouts = this.workouts.length;\n                const totalCalories = this.workouts.reduce((sum, w) => sum + w.calories, 0);\n                const totalDuration = this.workouts.reduce((sum, w) => sum + w.duration, 0);\n                const avgCalories = totalWorkouts > 0 ? Math.round(totalCalories / totalWorkouts) : 0;\n\n                document.getElementById('totalWorkouts').textContent = totalWorkouts;\n                document.getElementById('totalCalories').textContent = totalCalories.toLocaleString();\n                document.getElementById('totalDuration').textContent = totalDuration.toLocaleString();\n                document.getElementById('avgCalories').textContent = avgCalories;\n\n                // Weekly Progress\n                const weeklyWorkouts = this.getWeeklyWorkouts();\n                const progress = Math.min((weeklyWorkouts / 5) * 100, 100);\n                document.getElementById('weeklyProgress').style.width = progress + '%';\n                document.getElementById('progressText').textContent = `${weeklyWorkouts} von 5 Workouts diese Woche`;\n            }\n\n            getWeeklyWorkouts() {\n                const now = new Date();\n                const weekStart = new Date(now.setDate(now.getDate() - now.getDay()));\n                weekStart.setHours(0, 0, 0, 0);\n\n                return this.workouts.filter(w => new Date(w.date) >= weekStart).length;\n            }\n\n            renderWorkouts() {\n                const container = document.getElementById('workoutList');\n                \n                if (this.workouts.length === 0) {\n                    container.innerHTML = '<p style=\"text-align: center; color: #666;\">Noch keine Workouts gespeichert. F√ºge dein erstes Workout hinzu!</p>';\n                    return;\n                }\n\n                container.innerHTML = this.workouts.map(workout => {\n                    const date = new Date(workout.date).toLocaleDateString('de-DE', {\n                        day: '2-digit',\n                        month: '2-digit',\n                        year: 'numeric',\n                        hour: '2-digit',\n                        minute: '2-digit'\n                    });\n\n                    const intensityColors = {\n                        'Niedrig': '#27ae60',\n                        'Mittel': '#f39c12',\n                        'Hoch': '#e67e22',\n                        'Sehr Hoch': '#e74c3c'\n                    };\n\n                    return `\n                        <div class=\"workout-item\">\n                            <h4>${workout.type}</h4>\n                            <p><strong>Dauer:</strong> ${workout.duration} min</p>\n                            <p><strong>Kalorien:</strong> ${workout.calories} kcal</p>\n                            <p><strong>Intensit√§t:</strong> <span style=\"color: ${intensityColors[workout.intensity]};\">‚óè</span> ${workout.intensity}</p>\n                            <p><strong>Datum:</strong> ${date}</p>\n                            ${workout.notes ? `<p><strong>Notizen:</strong> ${workout.notes}</p>` : ''}\n                            <button class=\"delete-btn\" onclick=\"tracker.deleteWorkout(${workout.id})\">L√∂schen</button>\n                        </div>\n                    `;\n                }).join('');\n            }\n\n            updateChart() {\n                const days = ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'];\n                const weeklyData = new Array(7).fill(0);\n                \n                const now = new Date();\n                const weekStart = new Date(now.setDate(now.getDate() - now.getDay()));\n                weekStart.setHours(0, 0, 0, 0);\n\n                this.workouts.forEach(workout => {\n                    const workoutDate = new Date(workout.date);\n                    if (workoutDate >= weekStart) {\n                        const dayIndex = workoutDate.getDay();\n                        weeklyData[dayIndex] += workout.calories;\n                    }\n                });\n\n                const maxCalories = Math.max(...weeklyData, 1);\n                const chartBars = document.querySelectorAll('.chart-bar');\n                \n                chartBars.forEach((bar, index) => {\n                    const height = (weeklyData[index] / maxCalories) * 200 + 20;\n                    bar.style.height = height + 'px';\n                    bar.querySelector('.chart-value').textContent = weeklyData[index];\n                });\n            }\n\n            saveWorkouts() {\n                localStorage.setItem('workouts', JSON.stringify(this.workouts));\n            }\n        }\n\n        // Stopwatch Class\n        class Stopwatch {\n            constructor() {\n                this.startTime = 0;\n                this.elapsedTime = 0;\n                this.isRunning = false;\n                this.interval = null;\n            }\n\n            start() {\n                if (!this.isRunning) {\n                    this.startTime = Date.now() - this.elapsedTime;\n                    this.isRunning = true;\n                    this.interval = setInterval(() => {\n                        this.updateDisplay();\n                        this.updateEstimatedCalories();\n                    }, 10);\n                    \n                    // Update buttons\n                    document.getElementById('startBtn').disabled = true;\n                    document.getElementById('stopBtn').disabled = false;\n                    document.getElementById('currentSession').textContent = 'L√§uft...';\n                }\n            }\n\n            stop() {\n                if (this.isRunning) {\n                    this.isRunning = false;\n                    clearInterval(this.interval);\n                    this.interval = null;\n                    \n                    // Update buttons\n                    document.getElementById('startBtn').disabled = false;\n                    document.getElementById('stopBtn').disabled = true;\n                    document.getElementById('transferBtn').disabled = false;\n                    document.getElementById('currentSession').textContent = 'Gestoppt';\n                }\n            }\n\n            reset() {\n                this.isRunning = false;\n                this.elapsedTime = 0;\n                if (this.interval) {\n                    clearInterval(this.interval);\n                    this.interval = null;\n                }\n                \n                // Update display and buttons\n                this.updateDisplay();\n                document.getElementById('startBtn').disabled = false;\n                document.getElementById('stopBtn').disabled = true;\n                document.getElementById('transferBtn').disabled = true;\n                document.getElementById('currentSession').textContent = 'Zur√ºckgesetzt';\n                document.getElementById('estimatedCalories').textContent = '0';\n            }\n\n            updateDisplay() {\n                this.elapsedTime = Date.now() - this.startTime;\n                const time = new Date(this.elapsedTime);\n                \n                const hours = time.getUTCHours().toString().padStart(2, '0');\n                const minutes = time.getUTCMinutes().toString().padStart(2, '0');\n                const seconds = time.getUTCSeconds().toString().padStart(2, '0');\n                \n                document.getElementById('stopwatchTime').textContent = `${hours}:${minutes}:${seconds}`;\n            }\n\n            updateEstimatedCalories() {\n                const minutes = Math.floor(this.elapsedTime / (1000 * 60));\n                const caloriesPerMinute = 12; // Average for running\n                const estimatedCalories = minutes * caloriesPerMinute;\n                document.getElementById('estimatedCalories').textContent = estimatedCalories;\n            }\n\n            transferToWorkout() {\n                if (this.elapsedTime > 0) {\n                    const minutes = Math.floor(this.elapsedTime / (1000 * 60));\n                    const calories = minutes * 12; // 12 kcal/min for running\n                    \n                    // Fill workout form\n                    document.getElementById('workoutType').value = 'Laufen';\n                    document.getElementById('duration').value = minutes;\n                    document.getElementById('calories').value = calories;\n                    document.getElementById('intensity').value = 'Mittel';\n                    document.getElementById('notes').value = `Laufzeit mit Stopwatch gemessen: ${document.getElementById('stopwatchTime').textContent}`;\n                    \n                    // Show success message\n                    const transferBtn = document.getElementById('transferBtn');\n                    const originalText = transferBtn.textContent;\n                    transferBtn.textContent = '√úbertragen! ‚úÖ';\n                    transferBtn.style.background = '#27ae60';\n                    setTimeout(() => {\n                        transferBtn.textContent = originalText;\n                        transferBtn.style.background = '';\n                    }, 2000);\n\n                    // Scroll to workout form\n                    document.querySelector('#workoutForm').scrollIntoView({\n                        behavior: 'smooth',\n                        block: 'center'\n                    });\n                }\n            }\n        }\n\n        // Initialize the app\n        const tracker = new FitnessTracker();\n        const stopwatch = new Stopwatch();\n\n        // Auto-fill calories based on activity type and duration\n        document.getElementById('workoutType').addEventListener('change', function() {\n            const duration = document.getElementById('duration').value;\n            if (duration && this.value) {\n                updateCalorieEstimate();\n            }\n        });\n\n        document.getElementById('duration').addEventListener('input', function() {\n            const workoutType = document.getElementById('workoutType').value;\n            if (this.value && workoutType) {\n                updateCalorieEstimate();\n            }\n        });\n\n        function updateCalorieEstimate() {\n            const workoutType = document.getElementById('workoutType').value;\n            const duration = parseInt(document.getElementById('duration').value) || 0;\n            \n            // Approximate calories per minute for different activities (for average person ~70kg)\n            const caloriesPerMinute = {\n                'Laufen': 12,\n                'Radfahren': 8,\n                'Krafttraining': 6,\n                'Schwimmen': 11,\n                'Yoga': 3,\n                'Tennis': 8,\n                'Fu√üball': 9,\n                'Basketball': 8,\n                'Wandern': 5,\n                'Tanzen': 5\n            };\n            \n            const estimatedCalories = Math.round(duration * (caloriesPerMinute[workoutType] || 5));\n            document.getElementById('calories').value = estimatedCalories;\n        }\n\n        // Add some visual feedback and animations\n        document.querySelectorAll('input, select').forEach(element => {\n            element.addEventListener('focus', function() {\n                this.parentElement.style.transform = 'scale(1.02)';\n                this.parentElement.style.transition = 'transform 0.2s ease';\n            });\n            \n            element.addEventListener('blur', function() {\n                this.parentElement.style.transform = 'scale(1)';\n            });\n        });\n\n        // Welcome message for first-time users\n        if (tracker.workouts.length === 0) {\n            setTimeout(() => {\n                alert('Willkommen zu deinem Fitness Tracker! üéâ\\n\\nF√ºge dein erstes Workout hinzu um zu starten.\\n\\nNeu: Nutze die Lauf-Stopwatch um deine Zeit zu messen!');\n            }, 1000);\n        }\n    </script>\n</body>\n</html>"
    }
  ],
  "createdAt": "2025-10-15T18:03:07.771Z",
  "userId": "1760551355429"
}